---
version: "3"

env:
  CGO_ENABLED: 0

vars:
  version:
    sh: git describe --always --tags --abbrev=8
  time:
    sh: date +%Y-%m-%dT%T%z
  package:
    sh: go mod edit -json | jq .Module.Path -r
  ldflags: -ldflags "-X 'main.BuildVersion={{.version}}' -X 'main.BuildTime={{.time}}'"

tasks:
  default:
    cmds:
      - go mod tidy
      - goimports -w -local {{.package}} .
      - go install {{.ldflags}} ./cmd/...
      - task: test

  docker:
    cmds:
      - go build -o build/ {{.ldflags}} ./cmd/...
      - docker build -t go-bridget/mig -f docker/Dockerfile .

  test:
    deps: [test:sqlite, test:mysql]

  test:sqlite:
    desc: "Test with sqlite"
    cmds:
      - mig migrate stats --path testdata/sqlite/stats --db-driver sqlite --db-dsn ":memory:" --apply --verbose
      - mig migrate stats --path testdata/sqlite/stats --db-driver sqlite --db-dsn "file:test.db" --apply --verbose
      - mig gen --lang=go --schema=stats --db-driver sqlite --db-dsn "file:test.db" --output testdata/sqlite/model

  test:mysql:
    desc: "Test with mysql"
    env:
      DB_DSN: 'root:test@tcp(localhost:3306)/stats'
    cmds:
      - defer: docker compose down
      - docker compose up -d --wait --remove-orphans
      - mig create stats --db-dsn "root:test@tcp(localhost:3306)/mysql" --apply
      - mig migrate stats --path testdata/schema/stats --apply
      - rm -rf testdata/gen_* docs/*
      - mig docs --schema=stats --output=testdata/docs
      - mig docs --schema=stats --output=testdata/docs --output-file=README.md
      - mig gen --schema=stats --lang=go --output=testdata/gen_go
      - mig gen --schema=stats --lang=php --output=testdata/gen_php
      - mig lint --schema=stats
      - mig version
